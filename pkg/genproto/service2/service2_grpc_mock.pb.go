// Code generated by protoc-gen-go-grpc-mock. DO NOT EDIT.
// source: service2/service2.proto

package service2

import (
	context "context"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	grpc "google.golang.org/grpc"
)

// MockExampleServiceClient is a mock of ExampleServiceClient interface.
type MockExampleServiceClient struct {
	ctrl     *gomock.Controller
	recorder *MockExampleServiceClientMockRecorder
}

// MockExampleServiceClientMockRecorder is the mock recorder for MockExampleServiceClient.
type MockExampleServiceClientMockRecorder struct {
	mock *MockExampleServiceClient
}

// NewMockExampleServiceClient creates a new mock instance.
func NewMockExampleServiceClient(ctrl *gomock.Controller) *MockExampleServiceClient {
	mock := &MockExampleServiceClient{ctrl: ctrl}
	mock.recorder = &MockExampleServiceClientMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockExampleServiceClient) EXPECT() *MockExampleServiceClientMockRecorder {
	return m.recorder
}

// GetSomething mocks base method.
func (m *MockExampleServiceClient) GetSomething(ctx context.Context, in *GetSomethingRequest, opts ...grpc.CallOption) (*GetSomethingResponse, error) {
	m.ctrl.T.Helper()
	varargs := []interface{}{ctx, in}
	for _, a := range opts {
		varargs = append(varargs, a)
	}
	ret := m.ctrl.Call(m, "GetSomething", varargs...)
	ret0, _ := ret[0].(*GetSomethingResponse)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetSomething indicates an expected call of GetSomething.
func (mr *MockExampleServiceClientMockRecorder) GetSomething(ctx, in interface{}, opts ...interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	varargs := append([]interface{}{ctx, in}, opts...)
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetSomething", reflect.TypeOf((*MockExampleServiceClient)(nil).GetSomething), varargs...)
}

// MockExampleServiceServer is a mock of ExampleServiceServer interface.
type MockExampleServiceServer struct {
	ctrl     *gomock.Controller
	recorder *MockExampleServiceServerMockRecorder
}

// MockExampleServiceServerMockRecorder is the mock recorder for MockExampleServiceServer.
type MockExampleServiceServerMockRecorder struct {
	mock *MockExampleServiceServer
}

// NewMockExampleServiceServer creates a new mock instance.
func NewMockExampleServiceServer(ctrl *gomock.Controller) *MockExampleServiceServer {
	mock := &MockExampleServiceServer{ctrl: ctrl}
	mock.recorder = &MockExampleServiceServerMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockExampleServiceServer) EXPECT() *MockExampleServiceServerMockRecorder {
	return m.recorder
}

// GetSomething mocks base method.
func (m *MockExampleServiceServer) GetSomething(ctx context.Context, in *GetSomethingRequest) (*GetSomethingResponse, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetSomething", ctx, in)
	ret0, _ := ret[0].(*GetSomethingResponse)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetSomething indicates an expected call of GetSomething.
func (mr *MockExampleServiceServerMockRecorder) GetSomething(ctx, in interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetSomething", reflect.TypeOf((*MockExampleServiceServer)(nil).GetSomething), ctx, in)
}
